plugins {

    id 'com.android.application'
    id 'kotlin-android'
    apply plugin: 'com.android.application'
    apply plugin: 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.allam.a3movies"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //Gson
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.3")

    //Lifecycle
    val lifecycle_version = "2.6.0"
    val arch_version = "2.1.0" //necessary?
    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel:2.6.0")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata:2.6.0")
    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime:2.6.0")
    // Annotation processor
    implementation("androidx.lifecycle:lifecycle-common-java8:2.6.0")

    //Room
    implementation("androidx.room:room-runtime:2.4.2")
    annotationProcessor("androidx.room:room-compiler:2.4.2")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.4.2")
    // To use Kotlin Symbolic Processing (KSP)
    ksp("androidx.room:room-compiler:2.4.2")

    //Daggers
    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-compiler:2.42'

    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.42'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.42'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.42'
    kaptTest 'com.google.dagger:hilt-compiler:2.42'


    kapt {
    correctErrorTypes true
    }

    //coli
    implementation("io.coil-kt:coil:2.1.0")

    //Recyclerview
    implementation("androidx.recyclerview:recyclerview:1.2.1")
    // For control over item selection of both touch and mouse driven selection
    implementation("androidx.recyclerview:recyclerview-selection:1.1.0")


}